// Created by Microsoft (R) C/C++ Compiler Version 12.00.8168.0 (3e0f6d8c).
//
// COMEvtLogger.tlh
//
// C++ source equivalent of Win32 type library COMEvtLogger.tlb
// compiler-generated file created 12/01/01 at 21:27:47 - DO NOT EDIT!

#pragma once
#pragma pack(push, 8)

#include <comdef.h>

//
// Forward references and typedefs
//

struct /* coclass */ AMTSEvtLogger;
struct __declspec(uuid("2c4c8d6d-f7a1-472d-942d-e2d4ef0f0846"))
/* dual interface */ IAMTSEvtLogger;

//
// Smart pointer typedef declarations
//

_COM_SMARTPTR_TYPEDEF(IAMTSEvtLogger, __uuidof(IAMTSEvtLogger));

//
// Type library items
//

struct __declspec(uuid("f8c74d83-9a9c-4bd5-9664-256e4836c05b"))
AMTSEvtLogger;
    // [ default ] interface IAMTSEvtLogger

struct __declspec(uuid("2c4c8d6d-f7a1-472d-942d-e2d4ef0f0846"))
IAMTSEvtLogger : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL AddEventSource (
        _bstr_t bstrSource );
    VARIANT_BOOL ReportErrorEvent (
        _bstr_t bstrEventData,
        _bstr_t bstrEventSource );
    VARIANT_BOOL ReportInfoEvent (
        _bstr_t bstrEventData,
        _bstr_t bstrEventSource );
    VARIANT_BOOL ReportWarningEvent (
        _bstr_t bstrEventData,
        _bstr_t bstrEventSource );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_AddEventSource (
        BSTR bstrSource,
        VARIANT_BOOL * pStat ) = 0;
    virtual HRESULT __stdcall raw_ReportErrorEvent (
        BSTR bstrEventData,
        BSTR bstrEventSource,
        VARIANT_BOOL * pStat ) = 0;
    virtual HRESULT __stdcall raw_ReportInfoEvent (
        BSTR bstrEventData,
        BSTR bstrEventSource,
        VARIANT_BOOL * pStat ) = 0;
    virtual HRESULT __stdcall raw_ReportWarningEvent (
        BSTR bstrEventData,
        BSTR bstrEventSource,
        VARIANT_BOOL * pStat ) = 0;
};

//
// Named GUID constants initializations
//

extern "C" const GUID __declspec(selectany) LIBID_COMEVTLOGGERLib =
    {0xb3009f54,0xd7ae,0x4391,{0xb4,0x6c,0xc6,0x3f,0xd1,0xb0,0xbf,0x4b}};
extern "C" const GUID __declspec(selectany) CLSID_AMTSEvtLogger =
    {0xf8c74d83,0x9a9c,0x4bd5,{0x96,0x64,0x25,0x6e,0x48,0x36,0xc0,0x5b}};
extern "C" const GUID __declspec(selectany) IID_IAMTSEvtLogger =
    {0x2c4c8d6d,0xf7a1,0x472d,{0x94,0x2d,0xe2,0xd4,0xef,0x0f,0x08,0x46}};

//
// Wrapper method implementations
//

#include "COMEvtLogger.tli"

#pragma pack(pop)
